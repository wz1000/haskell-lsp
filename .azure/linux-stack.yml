jobs:
- job: Linux_Stack
  timeoutInMinutes: 0
  pool:
    vmImage: ubuntu-16.04
  strategy:
    matrix:
      stack-8.8.2:
        YAML_FILE: stack-8.8.2.yaml
      stack-8.8.1:
        YAML_FILE: stack-8.8.1.yaml
      stack-8.6.5:
        YAML_FILE: stack-8.6.5.yaml
      stack-8.6.4:
        YAML_FILE: stack-8.6.4.yaml
      stack-8.4.4:
        YAML_FILE: stack-8.4.4.yaml
      stack-8.4.3:
        YAML_FILE: stack-8.4.3.yaml
      stack-8.4.2:
        YAML_FILE: stack-8.4.2.yaml
      stack-8.2.2:
        YAML_FILE: stack-8.2.2.yaml
  variables:
    STACK_ROOT: /home/vsts/.stack
  steps:
  - task: Cache@2
    inputs:
      key: '"stack" | "$(Agent.OS)" | $(Build.SourcesDirectory)/$(YAML_FILE)'
      path: .azure-cache
      cacheHitVar: CACHE_RESTORED
    displayName: "Download cache"
  - bash: |
      mkdir -p $STACK_ROOT
      tar -vxzf .azure-cache/stack-root.tar.gz -C /
      mkdir -p .stack-work
      tar -vxzf .azure-cache/stack-work.tar.gz
    displayName: "Unpack cache"
    condition: eq(variables.CACHE_RESTORED, 'true')
  - bash: |
      git submodule sync
      git submodule update --init
  - bash: |
      mkdir -p ~/.local/bin
      curl -L https://get.haskellstack.org/stable/linux-x86_64.tar.gz | \
        tar vxz --wildcards --strip-components=1 -C ~/.local/bin '*/stack'
    displayName: Install stack
  - bash: |
      source .azure/linux-stack.bashrc
      stack setup --stack-yaml $(YAML_FILE)
    displayName: Install GHC
  - bash: |
      source .azure/linux-stack.bashrc
      stack  --stack-yaml $(YAML_FILE) --install-ghc build --only-dependencies
    displayName: Build dependencies
  - bash: |
      source .azure/linux-stack.bashrc
      stack build --stack-yaml $(YAML_FILE)
    displayName: Build `haskell-lsp`
  - bash: |
      source .azure/linux-stack.bashrc
      stack build --stack-yaml $(YAML_FILE) --flag haskell-lsp:demo
    displayName: Build language server example
  - bash: |
      source .azure/linux-stack.bashrc
      stack build --stack-yaml $(YAML_FILE) --test --bench --only-dependencies
    displayName: Build Test-dependencies
  - bash: |
      source .azure/linux-stack.bashrc
      stack test --stack-yaml $(YAML_FILE) --dump-logs
    displayName: "Run Tests"
  - bash: |
      mkdir -p .azure-cache
      tar -vczf .azure-cache/stack-root.tar.gz $STACK_ROOT
      tar -vczf .azure-cache/stack-work.tar.gz .stack-work
    displayName: "Pack cache"
